-- listing of series containing wishbone and calibration data
CREATE TABLE data_series (
    start_s INTEGER,    -- start series+run     
    end_s INTEGER,      -- end series+run
    type TEXT,          -- type of data
    comments TEXT,      -- comments
    date INTEGER,       -- date of series
    runtime REAL,       -- run time [s]
    tier INTEGER,       -- data quality tier
    field REAL,         -- magnetic field direction, +/-1
    energy_thresh REAL, -- threshold on energy PMTs
    veto_thresh REAL,   -- threshold on veto PMTs
    energy_volt REAL,   -- voltage on energy PMTs
    veto_volt REAL,     -- voltage on veto PMTs
    beta_trim REAL      -- Lower beta trim (LabView input)
);
CREATE UNIQUE INDEX idx_data_series ON data_series(start_s, end_s);
CREATE INDEX idx_data_series_type ON data_series(type);

-- energy calibration for PMT signal sum from metadata
CREATE TABLE pmt_sum_cal (
    start_s INTEGER,    -- start series+run                  
    end_s INTEGER,      -- end series+run
    slope REAL,         -- slope
    intercept REAL      -- intercept
);
CREATE UNIQUE INDEX idx_pmt_sum_cal ON pmt_sum_cal(start_s, end_s);

-- wishbone data re-calibration curve
CREATE TABLE wishbone_recal (
    start_s INTEGER,    -- start series+run
    end_s INTEGER,      -- end series+run
    graph_ID INTEGER    -- rowid from named_object for energy correction graph
);
CREATE UNIQUE INDEX idx_wishbone_recal ON wishbone_recal(start_s, end_s);

-- analyzed run timing data
CREATE TABLE run_timing (
    run INTEGER PRIMARY KEY,    -- series+run
    start_time TEXT,            -- date/time of run start
    wall_time REAL              -- wall time [s]
    n_evts INTEGER              -- number of events in reduced file
);

-- PMT gain calibration parameters
CREATE TABLE pmt_gaincal (
    start_s INTEGER,    -- start series+run                  
    end_s INTEGER,      -- end series+run
    pmt INTEGER,        -- PMT number
    sigPerPE REAL,      -- ADC-to-photoelectrons conversion
    sigPerMeV REAL      -- signal-to-energy conversion
);
CREATE UNIQUE INDEX idx_pmt_gaincal ON pmt_gaincal(start_s, end_s, pmt);

-- Calibrate weighted (PE) sum
CREATE TABLE pmt_wsumcal (
    start_s INTEGER,    -- start series+run                  
    end_s INTEGER,      -- end series+run
    calcurve INTEGER,   -- calibration curve (rowid from named_object)
    PEperMeV REAL       -- calibrated effective energy resolution
);
CREATE UNIQUE INDEX idx_pmt_wsumcal ON pmt_wsumcal(start_s, end_s);

-- Generic named objects (use rowid as key on other collections)
CREATE TABLE named_object (
    type TEXT,          -- object type (specifies relation to other tables)
    name TEXT,          -- object name (short identifier)
    descrip TEXT        -- object description (more verbose information)
);
CREATE INDEX idx_named_object ON named_object(type);

-- Graph points
CREATE TABLE graph_points (
    graph_id INTEGER,   -- rowid from named_object
    x REAL,
    dx REAL,
    y REAL,
    dy REAL
);
CREATE INDEX idx_graph_points ON graph_points(graph_id);

-- Calibration fit peaks
CREATE TABLE calib_peaks (
    series INTEGER,     -- data series fit
    pktype TEXT,        -- type of peak
    dttype TEXT,        -- type of data
    center REAL,        -- peak center
    sigma REAL,         -- peak width
    height REAL,        -- peak height
    dcenter REAL,       -- peak center uncertainty
    dsigma REAL,        -- peak width uncertainty
    dheight REAL,       -- peak height uncertainty
    xidx INTEGER        -- extra data index
);
CREATE INDEX idx_calib_peaks ON calib_peaks(series);

-- Analysis quantities
CREATE TABLE analysis_results (
    type_id INTEGER,    -- rowid from named_object
    start_s INTEGER,    -- start series+run                  
    end_s INTEGER,      -- end series+run
    time INTEGER,       -- result calculation timestamp
    value REAL,         -- result value
    err REAL            -- result uncertainty
);
CREATE INDEX idx_analysis_results ON analysis_results(type_id, start_s, end_s, time);


-----------------------------------------------------
-- Admin commands
--
-- DELETE FROM pmt_sum_cal WHERE start_s = 30590000;
-- INSERT INTO pmt_sum_cal(start_s, end_s, slope, intercept) VALUES(30000000,99999999,0.013,45);
-- INSERT INTO pmt_sum_cal(start_s, end_s, slope, intercept) VALUES(30590000,99999999,0.13,4.5); -- first new DAQ runs require ~10x rescale
-- INSERT INTO pmt_sum_cal(start_s, end_s, slope, intercept) VALUES(30650000,99999999,0.013,45);

